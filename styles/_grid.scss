@use 'sass:math';

$grid-gap: 25px;
$grid-columns: 12;

//flex container definition
.flexGrid {
  display: flex;
  flex-wrap: wrap;
}

.flexGrid.reverse {
  flex-direction: row-reverse;

  @media screen and (max-width: $phablet) {
    flex-direction: row;
  }
}

//flex item definition
@mixin col {
  box-sizing: border-box;
  // padding: $grid-gap 0 0 $grid-gap;
  padding-left: $grid-gap;
  background-clip: content-box;
  flex-basis: 100%;

  &:first-child {
    padding-left: 0;
  }
}

//round flex items' width - IE
@function round-width($i) {
  $width: math.div(100 * $i * 100, $grid-columns);
  $roundWidth: math.div(floor($width), 100);
  @return #{$roundWidth + '%'};
}

//utility classes
@for $i from 1 through $grid-columns {
  .col--#{$i} {
    @include col;

    flex-basis: round-width($i);
    max-width: round-width($i);
  }
}

@media only screen and (min-width: $phablet) {
  @for $i from 1 through $grid-columns {
    .col--md-#{$i} {
      @include col;

      flex-basis: round-width($i);
      max-width: round-width($i);
    }
  }
}
